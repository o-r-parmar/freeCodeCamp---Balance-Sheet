*{
    box-sizing: border-box;
      /* This ensures elements include padding and border in their specified width and height. */
}

body{
    background-color: #c9d2fc;
}

main{
    height: 100vw;
    overflow-y: auto;
    padding: 20px;
}

.cat-head{
    width: 205px;
    height: 180px;
    border: 1px solid #000;
    border-radius: 46%;
    background: linear-gradient(to bottom, #5e5e5e 85%, #45454f 100%);
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    /* Give the .cat-head element a position property set to absolute. Set a value of 0 for the right, left, top, bottom properties, then set its margin property on all sides to auto. That's one way to center an element vertically and horizontally using CSS positioning. */
}
/* Once you set the position property of the element, you can move the element around by setting a pixel or a percentage value for one or more of the top, right, left, or bottom properties. 
1. Static - is the default positioning for all elements. If you assign it to an element, you won't be able to move it around with top, right, left, or bottom.
2. Absolute - The next position property is absolute. When you use the absolute value for your position property, the element is taken out of the normal flow of the document, and then its position is determined by the top, right, bottom, and left properties.
3. Relative - When you use the relative value, the element is still positioned according to the normal flow of the document, but the top, left, bottom, and right values become active.
4. Fixed - is a position property value that lets you make an element fixed to the page no matter where the user scrolls to on the page.
5. */

/* .box{
    width: 200px;
    height: 2000px;
    background-color: #000;
    position: absolute;
    top: 800px;
    left: 650px;
} */

